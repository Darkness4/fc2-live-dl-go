FROM --platform=${BUILDPLATFORM} ghcr.io/darkness4/fc2-live-dl-go:latest-darwin-base-${TARGETARCH} AS builder

WORKDIR /work
COPY go.mod go.sum ./
RUN go mod download

COPY . .

ARG TARGETARCH
ENV OSXCROSS_PKG_CONFIG_USE_NATIVE_VARIABLES=1
ENV PKG_CONFIG_PATH=/osxcross/lib/pkgconfig:/lib/pkgconfig

ARG VERSION=dev

RUN if [ "${TARGETARCH}" = "amd64" ]; then \
  export CC="x86_64-apple-darwin22.2-clang"; \
  export CXX="x86_64-apple-darwin22.2-clang++"; \
  export PKG_CONFIG="x86_64-apple-darwin22.2-pkg-config"; \
  export AR="x86_64-apple-darwin22.2-ar"; \
  export NM="x86_64-apple-darwin22.2-nm"; \
  export RANLIB="x86_64-apple-darwin22.2-ranlib"; \
  elif [ "${TARGETARCH}" = "arm64" ]; then \
  export CC="aarch64-apple-darwin22.2-clang"; \
  export CXX="aarch64-apple-darwin22.2-clang++"; \
  export PKG_CONFIG="aarch64-apple-darwin22.2-pkg-config"; \
  export AR="aarch64-apple-darwin22.2-ar"; \
  export NM="aarch64-apple-darwin22.2-nm"; \
  export RANLIB="aarch64-apple-darwin22.2-ranlib"; \
  fi; \
  GOARCH=${TARGETARCH} make bin/fc2-live-dl-go-darwin VERSION=${VERSION}

FROM scratch

COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
COPY --from=builder /work/bin/fc2-live-dl-go-darwin /fc2-live-dl-go

ENTRYPOINT [ "/fc2-live-dl-go" ]

# Helper container to copy binaries outside the container using podman/buildx export. Unused in production.
FROM scratch AS export

ARG TARGETARCH
COPY --from=builder /work/bin/fc2-live-dl-go-darwin /fc2-live-dl-go-darwin-${TARGETARCH}
