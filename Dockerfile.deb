ARG IMAGE

FROM ${IMAGE} as builder

ENV DEBIAN_FRONTEND=noninteractive

RUN apt update -y \
  && apt install -y \
  libavcodec-dev \
  libavformat-dev \
  libavutil-dev \
  pkg-config \
  gcc \
  wget \
  tar \
  gzip \
  && rm -rf /var/lib/apt/lists/*

ARG TARGETOS TARGETARCH VERSION=dev
RUN mkdir -p /usr/local \
  && wget -q https://go.dev/dl/go1.20.2.${TARGETOS}-${TARGETARCH}.tar.gz \
  && tar -C /usr/local -xzf go1.20.2.${TARGETOS}-${TARGETARCH}.tar.gz \
  && rm -f go1.20.2.${TARGETOS}-${TARGETARCH}.tar.gz

ENV PATH="${PATH}:/usr/local/go/bin"

WORKDIR /build
COPY go.mod go.sum ./
RUN go mod download

COPY . .

RUN --mount=type=cache,target=/root/.cache/go-build \
  --mount=type=cache,target=/go/pkg \
  CGO_ENABLED=1 GOOS=$TARGETOS GOARCH=$TARGETARCH go build -a -ldflags "-s -w -X main.version=${VERSION}" -o /out/fc2-live-dl-go ./main.go

FROM docker.io/goreleaser/nfpm:latest

WORKDIR /work

ARG TARGETOS TARGETARCH VERSION=dev RELEASE
ENV TARGETOS=${TARGETOS}
ENV TARGETARCH=${TARGETARCH}
ENV VERSION=${VERSION}
ENV RELEASE=${RELEASE}

COPY --from=builder /out/fc2-live-dl-go /work/bin/fc2-live-dl-go
